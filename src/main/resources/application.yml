spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: tenant_management_service
          uri: http://localhost:9110 # Target microservice
          predicates:
            - Path=/api/tenant/**
        - id: user_management_service
          uri: http://localhost:9100    # Target microservice
          predicates:
            - Path=/api/**
        - id: oauth2_authorization_service
          uri: http://localhost:9100
          predicates:
            - Path=/oauth2/authorization/**
        - id: post_login_service
          uri: http://localhost:9100
          predicates:
            - Path=/post-login
        - id: oauth2_redirect
          uri: http://localhost:9100
          predicates:
            - Path=/login/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter:
                  replenishRate: 5  # wanted number of requests per second
                  burstCapacity: 10 # Max bucket size (burst requests), product of replenishRate and requestedTokens
                  requestedTokens: 1 # time span in seconds
                key-resolver: "#{@ipKeyResolver}" # Uses client IP as key
  redis:
    host: localhost
    port: 6379

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: TRACE
    org.springframework.cloud.gateway.route.RouteDefinitionLocator: INFO
    reactor.netty: INFO

#      routes:
#        - id: customer-service
#          uri: lb://customer-service # Target microservice
#          predicates:
#            - Path=customer-service/**

#        - id: tenant-service
#          uri: lb://tenant-service # Target microservice
#          predicates:
#            - Path=tenant-service/**